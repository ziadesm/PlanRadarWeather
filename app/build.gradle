import com.planradar.weather.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
//    id 'androidx.navigation.safeargs.kotlin'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace 'com.planradar.weather'
    compileSdk 32

    defaultConfig {
        applicationId "com.planradar.weather"
        minSdk 22
        targetSdk 32
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        ndk { abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "API_KEY", apikeyProperties['API_KEY'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
    buildFeatures{
        viewBinding = true
        dataBinding = false
    }
    kapt {
        generateStubs = true
        correctErrorTypes = true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Testing
    androidTestImplementation Libs.Testing.uiAutomator
    androidTestImplementation Libs.Testing.rules
    androidTestImplementation Libs.Testing.mockWebServer
    androidTestImplementation  Libs.Testing.coreKtx
    debugImplementation   Libs.Testing.coreKtx

    testImplementation Libs.Android.coroutinesTest
    testImplementation Libs.Testing.jUnit
    testImplementation Libs.Testing.junitKtx
    testImplementation Libs.Testing.mockito
    testImplementation Libs.Testing.mockWebServer


    // Hilt
    implementation Libs.Hilt.android
    kapt Libs.Hilt.androidCompiler
    kapt Libs.Hilt.compiler
    // For instrumented tests.
    androidTestImplementation Libs.Hilt.androidTesting
    // ...with Kotlin.
    kaptAndroidTest Libs.Hilt.androidCompiler
    // For Robolectric tests.
    testImplementation Libs.Hilt.androidTesting
    // ...with Kotlin.
    kaptTest Libs.Hilt.androidCompiler


    // NETWORK
    implementation Libs.Network.gson
    implementation Libs.Network.gsonConverter
    implementation Libs.Network.retrofit
    implementation Libs.Network.okhttp
    implementation Libs.Network.loggingInterceptor

    // Lifecycle
    implementation Libs.Lifecycle.fragment

    // Cache (Room)
    implementation Libs.Cache.runtime
    implementation Libs.Cache.ktx
    kapt Libs.Cache.compiler
    // Utils
    implementation Libs.Others.timber
}